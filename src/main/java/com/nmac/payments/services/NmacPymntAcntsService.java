/*
 * Created on 2017-09-05 ( Time 14:16:10 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */

package com.nmac.payments.services;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.nmac.payments.entities.NmacPymntAcnts;
import com.nmac.payments.exceptions.NmacPymntAcntsNotFoundException;
import com.nmac.payments.repository.NmacPymntAcntsRepository;

@Service
@Transactional(rollbackFor=NmacPymntAcntsNotFoundException.class)
public class NmacPymntAcntsService 
{
	private static Logger logger = LoggerFactory.getLogger(NmacPymntAcntsService.class);
	
	@Autowired
	private NmacPymntAcntsRepository nmacpymntacntsRepository;
		
	/*
	 * READ methods
	 */
	public Page<NmacPymntAcnts> findAll(int page, int count) {
		
		if (logger.isDebugEnabled())
			logger.debug("NmacPymntAcntsService -> findAll NmacPymntAcntss");
		
		return nmacpymntacntsRepository.findAll(new PageRequest(page, count));
	}

	public Iterable<NmacPymntAcnts> findAll() {
		
		if (logger.isDebugEnabled())
			logger.debug("NmacPymntAcntsService -> findAll NmacPymntAcntss");
		
		return nmacpymntacntsRepository.findAll();
	}
/*
	public NmacPymntAcnts findBySfid(String nmacpymntacnts){
		if (logger.isDebugEnabled())
			logger.debug("Retrieving NmacPymntAcnts with sfid:" + nmacpymntacnts);
		
		return nmacpymntacntsRepository.findBySfid(nmacpymntacnts);
		
	}
*/
	public NmacPymntAcnts get(int id) {
		if (logger.isDebugEnabled())
			logger.debug("Retrieving NmacPymntAcnts with id:" + id);
		
		NmacPymntAcnts elementToGet = nmacpymntacntsRepository.findOne(id);
		
		if (elementToGet == null)
			throw new NmacPymntAcntsNotFoundException(id);
		
		return elementToGet;
	}

	public NmacPymntAcnts create(NmacPymntAcnts nmacpymntacnts) {

		if (logger.isDebugEnabled())
			logger.debug("NmacPymntAcntsService -> create:" + nmacpymntacnts);
			
		return nmacpymntacntsRepository.save(nmacpymntacnts);
	}

	public NmacPymntAcnts update(NmacPymntAcnts nmacpymntacnts) {
		
		if (logger.isDebugEnabled())
			logger.debug("NmacPymntAcntsService -> create:" + nmacpymntacnts);

		NmacPymntAcnts elementToUpdate = nmacpymntacntsRepository.findOne(nmacpymntacnts.getId());
		
		if (elementToUpdate == null)
			throw new NmacPymntAcntsNotFoundException(nmacpymntacnts.getName());
		
		elementToUpdate.update(nmacpymntacnts);
		nmacpymntacntsRepository.save(elementToUpdate);
		
		return elementToUpdate;
	}

	public NmacPymntAcnts delete(int id) {
		if (logger.isDebugEnabled())
			logger.debug("NmacPymntAcntsService -> delete:" + id);

		NmacPymntAcnts elementToDelete = get(id);
		
		if (elementToDelete == null)
			throw new NmacPymntAcntsNotFoundException(id);
		
		nmacpymntacntsRepository.delete(elementToDelete);

		return elementToDelete;
	}

}

